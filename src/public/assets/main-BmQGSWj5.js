const l={props:{annotations:{type:Array,required:!0},url:{type:String,required:!0}},computed:{selectedAnnotations(){return this.annotations.filter(e=>e.selected)},isDisabled(){return this.selectedAnnotations.length!==1},href(){return this.url+this.selectedAnnotations[0].id}}};let d=biigle.$require("annotations.components.annotationCanvas"),h=biigle.$require("api.annotations"),r=biigle.$require("annotations.components.annotationsTabPlugins"),n=biigle.$require("handleErrorResponse"),u=biigle.$require("annotations.stores.images"),c=biigle.$require("labelTrees.components.labelTrees"),b=biigle.$require("core.mixins.loader"),g=biigle.$require("resource"),p=biigle.$require("core.components.sidebar"),f=biigle.$require("core.components.sidebarTab"),m=biigle.$require("core.components.typeahead"),L=biigle.$require("api.users");r&&(r.assistanceRequest=l);const $={components:{labelTrees:c,typeahead:m},data(){return{users:[],selectedUser:null,labelTrees:[]}},computed:{flatLabels(){let e=[];return this.labelTrees.forEach(function(t){Array.prototype.push.apply(e,t.labels)}),e},selectedLabels(){return this.flatLabels.filter(e=>e.selected)},hasTooManySelectedLabels(){return this.selectedLabels.length>5},receiverId(){return this.selectedUser?this.selectedUser.id:""},receiverName(){return this.selectedUser?this.selectedUser.name:""}},methods:{close(){window.close()},loadUsers(){return L.query().then(this.usersLoaded,n)},usersLoaded:function(e){e.data.forEach(function(t){t.name=t.firstname+" "+t.lastname}),this.users=e.data},selectUser:function(e){this.selectedUser=e},clearSelectedUser(){this.selectedUser=null}},created(){let e=biigle.$require("ananas.oldLabels");if(Array.isArray(e)){let s={};e.forEach(function(i){s[i]=null}),this.flatLabels.forEach(function(i){s.hasOwnProperty(i.id)&&(i.selected=!0)})}let t=this.loadUsers(),a=biigle.$require("ananas.oldReceiverId");a&&t.then(()=>{for(let s=this.users.length-1;s>=0;s--)if(this.users[s].id==a){this.selectedUser=this.users[s];return}}),this.labelTrees=biigle.$require("ananas.labelTrees")}},q=g("api/v1/annotation-assistance-requests{/id}",{},{respond:{method:"PUT",url:"api/v1/annotation-assistance-requests{/token}"}}),o={mixins:[b],components:{sidebar:p,sidebarTab:f,annotationCanvas:d},data(){return{image:null,annotations:[],annotation:null}},methods:{setImageAndAnnotation(e){this.image=e,this.annotations.push(this.annotation)},focusAnnotation(){this.$refs.canvas.focusAnnotation(this.annotation,!0)}},created(){this.annotation=biigle.$require("ananas.annotation")},mounted(){this.startLoading(),u.fetchAndDrawImage(this.annotation.image_id).then(this.setImageAndAnnotation).then(this.focusAnnotation).catch(n).finally(this.finishLoading)}},y={mixins:[o],data(){return{pickedLabel:null,responseText:"",closed:!1,errors:[],showMinimap:!0,token:""}},computed:{hasPickedLabel(){return this.pickedLabel!==null},hasResponseText(){return!!this.responseText},hasDisabledControls(){return this.closed||this.loading},hasErrors(){return this.errors.length>0}},methods:{pickLabel:function(e){this.hasDisabledControls||(this.pickedLabel===e?this.pickedLabel=null:this.pickedLabel=e)},submit(){let e={};this.hasPickedLabel&&(e.response_label_id=this.pickedLabel),this.hasResponseText&&(e.response_text=this.responseText),this.startLoading(),q.respond({token:this.token},e).finally(this.clearErrors).then(this.handleSuccess,this.handleError).finally(this.finishLoading)},handleSuccess(){this.closed=!0},clearErrors:function(e){return this.errors=[],e},handleError:function(e){for(let t in e.body)e.body.hasOwnProperty(t)&&this.errors.push(e.body[t][0])},checkForMobile(){window.innerWidth<1e3?this.showMinimap=!1:this.showMinimap=!0}},created(){this.checkForMobile(),window.addEventListener("resize",this.checkForMobile),this.token=biigle.$require("ananas.token")}},A={mixins:[o],data(){return{existingLabels:[],userId:null,suggestedLabelId:null}},computed:{attachedSuggestedLabel(){let e=this.existingLabels;for(let t=e.length-1;t>=0;t--)if(e[t].label_id===this.suggestedLabelId&&e[t].user_id===this.userId)return!0;return!1}},methods:{attach(){this.startLoading(),h.attachLabel({id:this.annotation.id},{label_id:this.suggestedLabelId,confidence:1}).then(this.handleAttachSuccess,n).finally(this.finishLoading)},handleAttachSuccess(){this.existingLabels.push({label_id:this.suggestedLabelId,user_id:this.userId})}},created(){this.existingLabels=biigle.$require("ananas.labels"),this.userId=biigle.$require("ananas.userId"),this.suggestedLabelId=biigle.$require("ananas.suggestedLabelId")}};biigle.$mount("ananas-respond-container",y);biigle.$mount("ananas-show-container",A);biigle.$mount("create-ananas-form",$);
